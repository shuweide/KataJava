package y2018.m07;

import org.junit.Test;

import static org.junit.Assert.assertEquals;

public class InsaneColouredTrianglesTest {
    @Test
    public void examples() {

        assertEquals('B', InsaneColouredTriangles.triangle("B"));
        assertEquals('R', InsaneColouredTriangles.triangle("GB"));
        assertEquals('R', InsaneColouredTriangles.triangle("RRR"));
        assertEquals('B', InsaneColouredTriangles.triangle("RGBG"));
        assertEquals('G', InsaneColouredTriangles.triangle("RBRGBRB"));
        assertEquals('G', InsaneColouredTriangles.triangle("RBRGBRBGGRRRBGBBBGG"));
        assertEquals('R', InsaneColouredTriangles.triangle("RBRRRBRGGBRGGGGBRRRGRBBRRRRBRGBRGBGRBGRBGGBRGRBBBBGGBGGGGRGGBGRBBRRGGBRBGRGGRGBBRGBBGGRBGGRRGRGRGGRBGGGBGGRBRRRRBBBBGGRGRBGGRRBGRRRBGRRRRBRRGRGRRBGRRGGGGBGRRGRGRBGRRRRRGBGBGRGBBGBRGRRBRBGBBRBGRGRGBRBBBRGGRRRRGGGGRBRRGRGGRRGRGGGRBGBBBRRRBRGGRGRRRBRBGGGGRGGBGRGRRBGRBGGBRRBRGRRBGRGBRGBGRRRRGBRRGGGBGGBBBGGBRRRBRGBGBBRGRRBRBRGBGGBGBBGBBBRGGBRBGGRRRRBRBGRRBRGBRBBBGBGGGGBBBBBGRGBRGGGBBRGGGBBBGRRGBBRRBBBGRRRGRBGBGBGRGBRBBBBRRRRBGGGBBBGRBRRRRRRBRRBGGRBGGRBGRGBBBBRBGRGBRBBRGRBRGGRGRGRBRRGBGGRGBRGRGBBRGGBBBBGRBRBGGBBGGBRGBBRRBRBGGBGRGGRGRRBRRGGBBRGRBBGBGBBRRGGBGRRRRBRGRGBGRGGBGRRBBGRGGRGGBBRGGGBBRGGGRRRRBBGGRGGBBGGBRGRRGRBGRGBRBBGBBGBRGRRGBRGRRBGBGGRGBGGRRRRGBRRRRRGBRGBRBBBRGBGGGGRBBRBGRBBRBGRRBRGGRGBGGRBBBGRGRRBRBBRBRRBBBBRRBRBRBGGRRRBGBRBGBRRRGGBBGBRRGBBRGBGGGGGGGRRGBGRGGGBGBGBBGRBGBGRGRBRRBRRBGGRBBBBRRBBBRRBRRBRRBBRGRBGRBRGRGRBBBBGBBRRRRGGRGGBBBGRRGRGRGRRGBGGGRGRRBBGRBBRGGBBGGGBRBGRRGBGBGRGBRBBBRBRBRRRRRRGRBGGRGGBBGGGGBBGGBGBGRGRRRBRBGRBRBBRBBGBGRGGGRRRGRRRBGBBGBGBRGRGGBRBBBRRBRBBRGRRBRBRRGGRGGGBBRRRRGRBRBBRGBGGGGGGRGRBRRBGBBBGRBRBGGGGBGBRBGGRRRRBBBGGBGRRGGBGGBBBRGRGBBGGGGBGBBRRGGRGGBRRGBGGGBGGBGGRRBRRBBGBRRRRRBRGRBRBGGBGRGRRGRBGBBGGGBGGRRBBGRGBRRBRGBBGGGRGRBRGGGBGBBGRGGGRRBRBBBGRRBGRRGGRBBGBRRGGGBGGGBRRBRRRGGBRRBGBGRBGGGGGBGGGBBRRRGBRBRRRGRRGGBBGBGRBGBRRRGRRGRBBBGRRGBRGGRBGGBGRRRRRBBRGRRGBBGGBGBBRRGBGRGBGGBRGBRRGGBRGBGBRBBGGRGRBGRBGGGRGGGGGGGBBRRRBRRRBBRBRRGGGGGRGRBGRGRBGGRGRBBRRGGRRRGBGBRGRRGBRRBGGBBRBBRGBRGBBBBRBBBGBBRRGBRBBGBRGGBRBBRBGBRBGGGBBBGRBGRGBGRBRRGBGRGRRRGGGBGGBGRGRRRGGGGRBBGRBRRGGBRBBBGGBGRRGBGRGRRBRRGBRRBRRBGRGGBGRGRRBBGGGGRRRBGRBRRGRRGRBRRRGBRRGGGRBBBGRBBGBGBBGBGBGGRGGBGRRRBBRGGGRGRBGGGRBBGGGGGGRRRBGBGRBRRGRRGBRBRBGRRBGBRBGBGRGRRGGRBGBRRBGGGGRBRGGGGGGGBBBBBGGRGGGGGBBBGRRBBGRBGRRGRRRGRRGRGGBGRRBBRRRBRGGGRBBGGBBGBBGRBBGRGBRGGGGGBBRRBBGBBGGRBBGBRBGRGBBRRRBBRRRRRBBRBGBGGRBRBGRGRBGGBRGRBBGRBBGBGBBGBGRBRRBRGGBRGBGGGBGGRRGRBBBBRRRBGBGRRBGBRGBBRGBRRBBBBRGRGGBRGRBBBBBBBGGGRRBGGBGGGRBRBRGRRBRRGRGBRRGGGGBRRGBGGRBRGBRGBRBBGGBBRRBGRBRGRRGBGBGBGRBGRBRBBBRR"));
    }

    @Test
    public void examples2() {

        assertEquals('B', InsaneColouredTriangles.triangle2("B"));
        assertEquals('R', InsaneColouredTriangles.triangle2("GB"));
        assertEquals('R', InsaneColouredTriangles.triangle2("RRR"));
        assertEquals('B', InsaneColouredTriangles.triangle2("RGBG"));
        assertEquals('G', InsaneColouredTriangles.triangle2("RBRGBRB"));
        assertEquals('G', InsaneColouredTriangles.triangle2("RBRGBRBGGRRRBGBBBGG"));
        assertEquals('R', InsaneColouredTriangles.triangle2("RBRRRBRGGBRGGGGBRRRGRBBRRRRBRGBRGBGRBGRBGGBRGRBBBBGGBGGGGRGGBGRBBRRGGBRBGRGGRGBBRGBBGGRBGGRRGRGRGGRBGGGBGGRBRRRRBBBBGGRGRBGGRRBGRRRBGRRRRBRRGRGRRBGRRGGGGBGRRGRGRBGRRRRRGBGBGRGBBGBRGRRBRBGBBRBGRGRGBRBBBRGGRRRRGGGGRBRRGRGGRRGRGGGRBGBBBRRRBRGGRGRRRBRBGGGGRGGBGRGRRBGRBGGBRRBRGRRBGRGBRGBGRRRRGBRRGGGBGGBBBGGBRRRBRGBGBBRGRRBRBRGBGGBGBBGBBBRGGBRBGGRRRRBRBGRRBRGBRBBBGBGGGGBBBBBGRGBRGGGBBRGGGBBBGRRGBBRRBBBGRRRGRBGBGBGRGBRBBBBRRRRBGGGBBBGRBRRRRRRBRRBGGRBGGRBGRGBBBBRBGRGBRBBRGRBRGGRGRGRBRRGBGGRGBRGRGBBRGGBBBBGRBRBGGBBGGBRGBBRRBRBGGBGRGGRGRRBRRGGBBRGRBBGBGBBRRGGBGRRRRBRGRGBGRGGBGRRBBGRGGRGGBBRGGGBBRGGGRRRRBBGGRGGBBGGBRGRRGRBGRGBRBBGBBGBRGRRGBRGRRBGBGGRGBGGRRRRGBRRRRRGBRGBRBBBRGBGGGGRBBRBGRBBRBGRRBRGGRGBGGRBBBGRGRRBRBBRBRRBBBBRRBRBRBGGRRRBGBRBGBRRRGGBBGBRRGBBRGBGGGGGGGRRGBGRGGGBGBGBBGRBGBGRGRBRRBRRBGGRBBBBRRBBBRRBRRBRRBBRGRBGRBRGRGRBBBBGBBRRRRGGRGGBBBGRRGRGRGRRGBGGGRGRRBBGRBBRGGBBGGGBRBGRRGBGBGRGBRBBBRBRBRRRRRRGRBGGRGGBBGGGGBBGGBGBGRGRRRBRBGRBRBBRBBGBGRGGGRRRGRRRBGBBGBGBRGRGGBRBBBRRBRBBRGRRBRBRRGGRGGGBBRRRRGRBRBBRGBGGGGGGRGRBRRBGBBBGRBRBGGGGBGBRBGGRRRRBBBGGBGRRGGBGGBBBRGRGBBGGGGBGBBRRGGRGGBRRGBGGGBGGBGGRRBRRBBGBRRRRRBRGRBRBGGBGRGRRGRBGBBGGGBGGRRBBGRGBRRBRGBBGGGRGRBRGGGBGBBGRGGGRRBRBBBGRRBGRRGGRBBGBRRGGGBGGGBRRBRRRGGBRRBGBGRBGGGGGBGGGBBRRRGBRBRRRGRRGGBBGBGRBGBRRRGRRGRBBBGRRGBRGGRBGGBGRRRRRBBRGRRGBBGGBGBBRRGBGRGBGGBRGBRRGGBRGBGBRBBGGRGRBGRBGGGRGGGGGGGBBRRRBRRRBBRBRRGGGGGRGRBGRGRBGGRGRBBRRGGRRRGBGBRGRRGBRRBGGBBRBBRGBRGBBBBRBBBGBBRRGBRBBGBRGGBRBBRBGBRBGGGBBBGRBGRGBGRBRRGBGRGRRRGGGBGGBGRGRRRGGGGRBBGRBRRGGBRBBBGGBGRRGBGRGRRBRRGBRRBRRBGRGGBGRGRRBBGGGGRRRBGRBRRGRRGRBRRRGBRRGGGRBBBGRBBGBGBBGBGBGGRGGBGRRRBBRGGGRGRBGGGRBBGGGGGGRRRBGBGRBRRGRRGBRBRBGRRBGBRBGBGRGRRGGRBGBRRBGGGGRBRGGGGGGGBBBBBGGRGGGGGBBBGRRBBGRBGRRGRRRGRRGRGGBGRRBBRRRBRGGGRBBGGBBGBBGRBBGRGBRGGGGGBBRRBBGBBGGRBBGBRBGRGBBRRRBBRRRRRBBRBGBGGRBRBGRGRBGGBRGRBBGRBBGBGBBGBGRBRRBRGGBRGBGGGBGGRRGRBBBBRRRBGBGRRBGBRGBBRGBRRBBBBRGRGGBRGRBBBBBBBGGGRRBGGBGGGRBRBRGRRBRRGRGBRRGGGGBRRGBGGRBRGBRGBRBBGGBBRRBGRBRGRRGBGBGBGRBGRBRBBBRR"));
    }

    @Test
    public void largeExamples() {
        String largeStr = "RGBRGRBGRB";

        StringBuilder stringBuilder = new StringBuilder();

        for(int i=0; i<10000;i++){
            stringBuilder.append(largeStr);
        }

        System.out.println(stringBuilder.length());

        long start = System.nanoTime();

        InsaneColouredTriangles.triangle(stringBuilder.toString());

        long end = System.nanoTime();

        System.out.println((end - start)/1_000_000);
    }


    @Test
    public void largeExamples2() {
        String largeStr = "RGBRGRBGRB";

        StringBuilder stringBuilder = new StringBuilder();

        for(int i=0; i<10000;i++){
            stringBuilder.append(largeStr);
        }

        System.out.println(stringBuilder.length());

        long start = System.nanoTime();

        InsaneColouredTriangles.triangle2(stringBuilder.toString());

        long end = System.nanoTime();

        System.out.println((end - start)/1_000_000);
    }
}